// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chef.proto

package chefpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Location struct {
	Longitude            float64  `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float64  `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_14e705f2f0ff9c45, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

type Chef struct {
	// The unique ID of the chef
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The chef's first name
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// The chef's last name
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// The chef's hashed and salted password
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// The chef's location
	Location *Location `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// The chef's rating
	Rating float32 `protobuf:"fixed32,6,opt,name=rating,proto3" json:"rating,omitempty"`
	// The number of ratings that the chef has gotten
	NumRating int32 `protobuf:"varint,7,opt,name=num_rating,json=numRating,proto3" json:"num_rating,omitempty"`
	// The recipes that the chef knows how to cook
	KnownRecipies        []string `protobuf:"bytes,8,rep,name=known_recipies,json=knownRecipies,proto3" json:"known_recipies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chef) Reset()         { *m = Chef{} }
func (m *Chef) String() string { return proto.CompactTextString(m) }
func (*Chef) ProtoMessage()    {}
func (*Chef) Descriptor() ([]byte, []int) {
	return fileDescriptor_14e705f2f0ff9c45, []int{1}
}

func (m *Chef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chef.Unmarshal(m, b)
}
func (m *Chef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chef.Marshal(b, m, deterministic)
}
func (m *Chef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chef.Merge(m, src)
}
func (m *Chef) XXX_Size() int {
	return xxx_messageInfo_Chef.Size(m)
}
func (m *Chef) XXX_DiscardUnknown() {
	xxx_messageInfo_Chef.DiscardUnknown(m)
}

var xxx_messageInfo_Chef proto.InternalMessageInfo

func (m *Chef) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Chef) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Chef) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Chef) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Chef) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Chef) GetRating() float32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Chef) GetNumRating() int32 {
	if m != nil {
		return m.NumRating
	}
	return 0
}

func (m *Chef) GetKnownRecipies() []string {
	if m != nil {
		return m.KnownRecipies
	}
	return nil
}

type ChefRequest struct {
	Chef                 *Chef    `protobuf:"bytes,1,opt,name=chef,proto3" json:"chef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChefRequest) Reset()         { *m = ChefRequest{} }
func (m *ChefRequest) String() string { return proto.CompactTextString(m) }
func (*ChefRequest) ProtoMessage()    {}
func (*ChefRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_14e705f2f0ff9c45, []int{2}
}

func (m *ChefRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChefRequest.Unmarshal(m, b)
}
func (m *ChefRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChefRequest.Marshal(b, m, deterministic)
}
func (m *ChefRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChefRequest.Merge(m, src)
}
func (m *ChefRequest) XXX_Size() int {
	return xxx_messageInfo_ChefRequest.Size(m)
}
func (m *ChefRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChefRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChefRequest proto.InternalMessageInfo

func (m *ChefRequest) GetChef() *Chef {
	if m != nil {
		return m.Chef
	}
	return nil
}

type ChefResponse struct {
	Chef                 *Chef    `protobuf:"bytes,1,opt,name=chef,proto3" json:"chef,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChefResponse) Reset()         { *m = ChefResponse{} }
func (m *ChefResponse) String() string { return proto.CompactTextString(m) }
func (*ChefResponse) ProtoMessage()    {}
func (*ChefResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_14e705f2f0ff9c45, []int{3}
}

func (m *ChefResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChefResponse.Unmarshal(m, b)
}
func (m *ChefResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChefResponse.Marshal(b, m, deterministic)
}
func (m *ChefResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChefResponse.Merge(m, src)
}
func (m *ChefResponse) XXX_Size() int {
	return xxx_messageInfo_ChefResponse.Size(m)
}
func (m *ChefResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChefResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChefResponse proto.InternalMessageInfo

func (m *ChefResponse) GetChef() *Chef {
	if m != nil {
		return m.Chef
	}
	return nil
}

func init() {
	proto.RegisterType((*Location)(nil), "io.homecook.service.chef.Location")
	proto.RegisterType((*Chef)(nil), "io.homecook.service.chef.Chef")
	proto.RegisterType((*ChefRequest)(nil), "io.homecook.service.chef.ChefRequest")
	proto.RegisterType((*ChefResponse)(nil), "io.homecook.service.chef.ChefResponse")
}

func init() { proto.RegisterFile("chef.proto", fileDescriptor_14e705f2f0ff9c45) }

var fileDescriptor_14e705f2f0ff9c45 = []byte{
	// 414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x92, 0xb1, 0x6e, 0xd4, 0x40,
	0x10, 0x86, 0xb5, 0xce, 0xe5, 0xb2, 0x9e, 0x23, 0x29, 0x16, 0x84, 0x2c, 0x13, 0x90, 0x65, 0x29,
	0xc8, 0xa2, 0xb0, 0xc5, 0xd1, 0x51, 0x20, 0x91, 0x20, 0xd1, 0x20, 0x8a, 0xa5, 0xa3, 0x39, 0x6d,
	0xec, 0x39, 0xdf, 0x2a, 0xf6, 0xae, 0xf1, 0xae, 0x93, 0x02, 0xd1, 0x50, 0xd3, 0xf1, 0x68, 0xbc,
	0x02, 0xaf, 0x40, 0x8f, 0xbc, 0x6b, 0x87, 0x2a, 0x3a, 0x09, 0x29, 0x9d, 0xe7, 0xff, 0xe6, 0x9f,
	0xf9, 0x3d, 0x36, 0x40, 0xb9, 0xc3, 0x6d, 0xde, 0xf5, 0xda, 0x6a, 0x16, 0x49, 0x9d, 0xef, 0x74,
	0x8b, 0xa5, 0xd6, 0x57, 0xb9, 0xc1, 0xfe, 0x5a, 0x96, 0x98, 0x8f, 0x3c, 0x3e, 0xad, 0xb5, 0xae,
	0x1b, 0x2c, 0x44, 0x27, 0x0b, 0xa1, 0x94, 0xb6, 0xc2, 0x4a, 0xad, 0x8c, 0xf7, 0xa5, 0xef, 0x80,
	0x7e, 0xd0, 0xa5, 0x93, 0xd8, 0x29, 0x84, 0x8d, 0x56, 0xb5, 0xb4, 0x43, 0x85, 0x11, 0x49, 0x48,
	0x46, 0xf8, 0x3f, 0x81, 0xc5, 0x40, 0x1b, 0x61, 0x3d, 0x0c, 0x1c, 0xbc, 0xad, 0xd3, 0x1f, 0x01,
	0x2c, 0x2e, 0x76, 0xb8, 0x65, 0x27, 0x10, 0xc8, 0xca, 0x79, 0x43, 0x1e, 0xc8, 0x8a, 0x3d, 0x05,
	0xd8, 0xca, 0xde, 0xd8, 0x8d, 0x12, 0xad, 0xb7, 0x85, 0x3c, 0x74, 0xca, 0x47, 0xd1, 0x22, 0x7b,
	0x02, 0x61, 0x23, 0x66, 0x7a, 0xe0, 0x28, 0x1d, 0x05, 0x07, 0x63, 0xa0, 0x9d, 0x30, 0xe6, 0x46,
	0xf7, 0x55, 0xb4, 0xf0, 0x6c, 0xae, 0xd9, 0x1b, 0xa0, 0xcd, 0x14, 0x3b, 0x3a, 0x4c, 0x48, 0xb6,
	0x5a, 0xa7, 0xf9, 0x5d, 0x17, 0xc8, 0xe7, 0x17, 0xe4, 0xb7, 0x1e, 0xf6, 0x18, 0x96, 0xbd, 0xb0,
	0x52, 0xd5, 0xd1, 0x32, 0x21, 0x59, 0xc0, 0xa7, 0x6a, 0xcc, 0xab, 0x86, 0x76, 0x33, 0xb1, 0xa3,
	0x84, 0x64, 0x87, 0x3c, 0x54, 0x43, 0xcb, 0x3d, 0x3e, 0x83, 0x93, 0x2b, 0xa5, 0x6f, 0xd4, 0xa6,
	0xc7, 0x52, 0x76, 0x12, 0x4d, 0x44, 0x93, 0x83, 0x2c, 0xe4, 0xc7, 0x4e, 0xe5, 0x93, 0x98, 0xbe,
	0x85, 0xd5, 0x78, 0x0d, 0x8e, 0x5f, 0x06, 0x34, 0x96, 0xad, 0x61, 0x31, 0xe6, 0x70, 0x67, 0x59,
	0xad, 0x9f, 0xdd, 0x1d, 0xd4, 0x99, 0x5c, 0x6f, 0x7a, 0x0e, 0x0f, 0xfc, 0x08, 0xd3, 0x69, 0x65,
	0xf0, 0x7f, 0x66, 0xac, 0xff, 0x10, 0x9f, 0xe3, 0x93, 0xe7, 0xac, 0x03, 0xb8, 0xe8, 0x51, 0x58,
	0x74, 0x9f, 0xea, 0x6c, 0xcf, 0x0c, 0x1f, 0x3e, 0x7e, 0xbe, 0xaf, 0xcd, 0x07, 0x4c, 0x1f, 0x7e,
	0xff, 0xf5, 0xfb, 0x67, 0x70, 0x9c, 0xd2, 0xe2, 0xfa, 0x65, 0x31, 0xe2, 0xd7, 0xe4, 0x05, 0xb3,
	0x70, 0xf4, 0x1e, 0xed, 0x7d, 0xac, 0x8b, 0xdd, 0xba, 0x47, 0x8c, 0xcd, 0xeb, 0x8a, 0xaf, 0xae,
	0x49, 0x56, 0xdf, 0xce, 0xe9, 0xe7, 0xe5, 0xf8, 0xdc, 0x5d, 0x5e, 0x2e, 0xdd, 0x4f, 0xfe, 0xea,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x85, 0xbb, 0x9c, 0x95, 0x2a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChefServiceClient is the client API for ChefService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChefServiceClient interface {
	CreateChef(ctx context.Context, in *ChefRequest, opts ...grpc.CallOption) (*ChefResponse, error)
	GetChef(ctx context.Context, in *ChefRequest, opts ...grpc.CallOption) (*ChefResponse, error)
}

type chefServiceClient struct {
	cc *grpc.ClientConn
}

func NewChefServiceClient(cc *grpc.ClientConn) ChefServiceClient {
	return &chefServiceClient{cc}
}

func (c *chefServiceClient) CreateChef(ctx context.Context, in *ChefRequest, opts ...grpc.CallOption) (*ChefResponse, error) {
	out := new(ChefResponse)
	err := c.cc.Invoke(ctx, "/io.homecook.service.chef.ChefService/CreateChef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chefServiceClient) GetChef(ctx context.Context, in *ChefRequest, opts ...grpc.CallOption) (*ChefResponse, error) {
	out := new(ChefResponse)
	err := c.cc.Invoke(ctx, "/io.homecook.service.chef.ChefService/GetChef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChefServiceServer is the server API for ChefService service.
type ChefServiceServer interface {
	CreateChef(context.Context, *ChefRequest) (*ChefResponse, error)
	GetChef(context.Context, *ChefRequest) (*ChefResponse, error)
}

func RegisterChefServiceServer(s *grpc.Server, srv ChefServiceServer) {
	s.RegisterService(&_ChefService_serviceDesc, srv)
}

func _ChefService_CreateChef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChefServiceServer).CreateChef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.homecook.service.chef.ChefService/CreateChef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChefServiceServer).CreateChef(ctx, req.(*ChefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChefService_GetChef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChefServiceServer).GetChef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.homecook.service.chef.ChefService/GetChef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChefServiceServer).GetChef(ctx, req.(*ChefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChefService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.homecook.service.chef.ChefService",
	HandlerType: (*ChefServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateChef",
			Handler:    _ChefService_CreateChef_Handler,
		},
		{
			MethodName: "GetChef",
			Handler:    _ChefService_GetChef_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chef.proto",
}
