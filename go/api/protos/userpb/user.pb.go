// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package userpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User_FoodPreference int32

const (
	User_NONE        User_FoodPreference = 0
	User_VEGAN       User_FoodPreference = 1
	User_VEGETARIAN  User_FoodPreference = 2
	User_PESCETARIAN User_FoodPreference = 3
)

var User_FoodPreference_name = map[int32]string{
	0: "NONE",
	1: "VEGAN",
	2: "VEGETARIAN",
	3: "PESCETARIAN",
}

var User_FoodPreference_value = map[string]int32{
	"NONE":        0,
	"VEGAN":       1,
	"VEGETARIAN":  2,
	"PESCETARIAN": 3,
}

func (x User_FoodPreference) String() string {
	return proto.EnumName(User_FoodPreference_name, int32(x))
}

func (User_FoodPreference) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1, 0}
}

type Location struct {
	Longitude            float64  `protobuf:"fixed64,1,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude             float64  `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

type User struct {
	// The unique ID of the user
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The user's first name
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	// The user's last name
	LastName string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	// The user's hashed and salted password
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// The user's location
	Location *Location `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// The user's allergens
	Allergens []string `protobuf:"bytes,6,rep,name=allergens,proto3" json:"allergens,omitempty"`
	// The user's food preferences
	// Note: front-end should provide drop-down component with ONLY these options
	FoodPreference       User_FoodPreference `protobuf:"varint,7,opt,name=food_preference,json=foodPreference,proto3,enum=io.homecook.service.user.User_FoodPreference" json:"food_preference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *User) GetAllergens() []string {
	if m != nil {
		return m.Allergens
	}
	return nil
}

func (m *User) GetFoodPreference() User_FoodPreference {
	if m != nil {
		return m.FoodPreference
	}
	return User_NONE
}

type UserRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (m *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(m, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterEnum("io.homecook.service.user.User_FoodPreference", User_FoodPreference_name, User_FoodPreference_value)
	proto.RegisterType((*Location)(nil), "io.homecook.service.user.Location")
	proto.RegisterType((*User)(nil), "io.homecook.service.user.User")
	proto.RegisterType((*UserRequest)(nil), "io.homecook.service.user.UserRequest")
	proto.RegisterType((*UserResponse)(nil), "io.homecook.service.user.UserResponse")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 507 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0xc1, 0x8a, 0xd3, 0x50,
	0x14, 0x35, 0x69, 0xa7, 0x93, 0xdc, 0x4a, 0xa6, 0x5c, 0x41, 0x62, 0x66, 0x94, 0x12, 0x50, 0x8a,
	0x60, 0x82, 0x75, 0xe7, 0x42, 0xe8, 0x8c, 0x99, 0x2a, 0x48, 0x1d, 0x32, 0xda, 0x85, 0x9b, 0xe1,
	0xb5, 0xb9, 0x6d, 0x83, 0x69, 0x5e, 0xcc, 0x7b, 0xad, 0xa8, 0xb8, 0xf1, 0x17, 0xfc, 0x34, 0xf1,
	0x0f, 0x5c, 0xfa, 0x11, 0x92, 0xf7, 0x26, 0x1d, 0xba, 0xa8, 0x03, 0x82, 0xbb, 0xdc, 0x73, 0xee,
	0x39, 0xf7, 0xdc, 0x47, 0x2e, 0xc0, 0x4a, 0x50, 0x19, 0x14, 0x25, 0x97, 0x1c, 0xdd, 0x94, 0x07,
	0x0b, 0xbe, 0xa4, 0x29, 0xe7, 0xef, 0x03, 0x41, 0xe5, 0x3a, 0x9d, 0x52, 0x50, 0xf1, 0xde, 0xd1,
	0x9c, 0xf3, 0x79, 0x46, 0x21, 0x2b, 0xd2, 0x90, 0xe5, 0x39, 0x97, 0x4c, 0xa6, 0x3c, 0x17, 0x5a,
	0xe7, 0x1d, 0x5e, 0xb2, 0xaa, 0x9a, 0xac, 0x66, 0x21, 0x2d, 0x0b, 0xf9, 0x49, 0x93, 0xfe, 0x73,
	0xb0, 0x5e, 0xf1, 0xa9, 0xea, 0xc7, 0x23, 0xb0, 0x33, 0x9e, 0xcf, 0x53, 0xb9, 0x4a, 0xc8, 0x35,
	0xba, 0x46, 0xcf, 0x88, 0xaf, 0x00, 0xf4, 0xc0, 0xca, 0x98, 0xd4, 0xa4, 0xa9, 0xc8, 0x4d, 0xed,
	0xff, 0x36, 0xa1, 0xf9, 0x56, 0x50, 0x89, 0x0e, 0x98, 0x69, 0xa2, 0xb4, 0x76, 0x6c, 0xa6, 0x09,
	0xde, 0x05, 0x98, 0xa5, 0xa5, 0x90, 0x17, 0x39, 0x5b, 0x6a, 0x99, 0x1d, 0xdb, 0x0a, 0x19, 0xb1,
	0x25, 0xe1, 0x21, 0xd8, 0x19, 0xab, 0xd9, 0x86, 0x62, 0xad, 0x0a, 0x50, 0xa4, 0x07, 0x56, 0xc1,
	0x84, 0xf8, 0xc8, 0xcb, 0xc4, 0x6d, 0x6a, 0xae, 0xae, 0xf1, 0x19, 0x58, 0xd9, 0x65, 0x6c, 0x77,
	0xaf, 0x6b, 0xf4, 0xda, 0x7d, 0x3f, 0xd8, 0xf5, 0x3c, 0x41, 0xbd, 0x60, 0xbc, 0xd1, 0x54, 0xab,
	0xb2, 0x2c, 0xa3, 0x72, 0x4e, 0xb9, 0x70, 0x5b, 0xdd, 0x46, 0x15, 0x6b, 0x03, 0xe0, 0x18, 0x0e,
	0x66, 0x9c, 0x27, 0x17, 0x45, 0x49, 0x33, 0x2a, 0x29, 0x9f, 0x92, 0xbb, 0xdf, 0x35, 0x7a, 0x4e,
	0xff, 0xd1, 0xee, 0x21, 0xd5, 0xfa, 0xc1, 0x29, 0xe7, 0xc9, 0xd9, 0x46, 0x14, 0x3b, 0xb3, 0xad,
	0xda, 0x3f, 0x05, 0x67, 0xbb, 0x03, 0x2d, 0x68, 0x8e, 0x5e, 0x8f, 0xa2, 0xce, 0x0d, 0xb4, 0x61,
	0x6f, 0x1c, 0x0d, 0x07, 0xa3, 0x8e, 0x81, 0x0e, 0xc0, 0x38, 0x1a, 0x46, 0x6f, 0x06, 0xf1, 0xcb,
	0xc1, 0xa8, 0x63, 0xe2, 0x01, 0xb4, 0xcf, 0xa2, 0xf3, 0x93, 0x1a, 0x68, 0xf8, 0x03, 0x68, 0x57,
	0xe3, 0x62, 0xfa, 0xb0, 0x22, 0x21, 0xb1, 0x0f, 0xcd, 0x2a, 0x82, 0x7a, 0xf6, 0x76, 0xff, 0xde,
	0xdf, 0x33, 0xc6, 0xaa, 0xd7, 0x3f, 0x86, 0x9b, 0xda, 0x42, 0x14, 0x3c, 0x17, 0xf4, 0x2f, 0x1e,
	0xfd, 0x9f, 0xa6, 0xce, 0x71, 0xae, 0x79, 0x5c, 0x03, 0x9c, 0x94, 0xc4, 0x24, 0xa9, 0x5f, 0xe1,
	0xfe, 0x35, 0x1e, 0x3a, 0xbc, 0xf7, 0xe0, 0xba, 0x36, 0x1d, 0xd0, 0xbf, 0xf3, 0xed, 0xc7, 0xaf,
	0xef, 0xe6, 0x2d, 0xdf, 0x09, 0x2b, 0x4e, 0x84, 0xeb, 0xc7, 0xea, 0xe3, 0xa9, 0xf1, 0x10, 0x3f,
	0xc3, 0xfe, 0x90, 0xe4, 0xff, 0x18, 0xda, 0x55, 0x43, 0x3d, 0x74, 0xb7, 0x87, 0x86, 0x5f, 0x54,
	0x6b, 0x9a, 0x7c, 0xc5, 0x18, 0x5a, 0x2f, 0x88, 0x65, 0x72, 0x81, 0xb7, 0x03, 0x7d, 0x67, 0x41,
	0x7d, 0x67, 0x41, 0x54, 0xdd, 0x99, 0xb7, 0x03, 0xf7, 0x5d, 0xe5, 0x8d, 0xd8, 0xb9, 0xf2, 0x5e,
	0x28, 0xa7, 0x63, 0xeb, 0x5d, 0xab, 0x82, 0x8a, 0xc9, 0xa4, 0xa5, 0x34, 0x4f, 0xfe, 0x04, 0x00,
	0x00, 0xff, 0xff, 0x16, 0xa4, 0xf6, 0xa2, 0x07, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	CreateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/io.homecook.service.user.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/io.homecook.service.user.UserService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/io.homecook.service.user.UserService/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	CreateUser(context.Context, *UserRequest) (*UserResponse, error)
	GetUser(context.Context, *UserRequest) (*UserResponse, error)
	Health(context.Context, *empty.Empty) (*empty.Empty, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.homecook.service.user.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.homecook.service.user.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/io.homecook.service.user.UserService/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Health(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "io.homecook.service.user.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
		{
			MethodName: "Health",
			Handler:    _UserService_Health_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
